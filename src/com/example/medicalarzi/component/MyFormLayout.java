package com.example.medicalarzi.component;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.TwinColSelect;
import com.vaadin.ui.VerticalLayout;

public class MyFormLayout extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private HorizontalLayout footer;

	@AutoGenerated
	private Button save;

	@AutoGenerated
	private Button clear;

	@AutoGenerated
	private GridLayout body;

	@AutoGenerated
	private TextArea addtnlComments;

	@AutoGenerated
	private Label commentsLabel;

	@AutoGenerated
	private TextArea previousRecomm;

	@AutoGenerated
	private Label recommLabel;

	@AutoGenerated
	private ComboBox procedureDrop;

	@AutoGenerated
	private Label procedureLabel;

	@AutoGenerated
	private Label affectedPartsLabel;

	@AutoGenerated
	private ComboBox conditionDrop;

	@AutoGenerated
	private Label conditionLabel;

	@AutoGenerated
	private OptionGroup arazCategory;

	@AutoGenerated
	private Label arazCatLabel;

	@AutoGenerated
	private TextField cellNumText;

	@AutoGenerated
	private Label mobileNum;

	@AutoGenerated
	private TextField phoneNumText;

	@AutoGenerated
	private Label phoneNumLabel;

	@AutoGenerated
	private TextField zipText;

	@AutoGenerated
	private Label zipLabel;

	@AutoGenerated
	private TextField cityText;

	@AutoGenerated
	private Label cityLabel;

	@AutoGenerated
	private TextField stateText;

	@AutoGenerated
	private Label stateLabel;

	@AutoGenerated
	private TextField addressText;

	@AutoGenerated
	private Label addressLabel;

	@AutoGenerated
	private TextField itsNumText;

	@AutoGenerated
	private Label itsNumLabel;

	@AutoGenerated
	private OptionGroup gender;

	@AutoGenerated
	private Label genderLabel;

	@AutoGenerated
	private TextField lastNameText;

	@AutoGenerated
	private Label lastNameLabel;

	@AutoGenerated
	private TextField firstNameText;

	@AutoGenerated
	private Label firstNameLabel;

	@AutoGenerated
	private HorizontalLayout header;

	@AutoGenerated
	private Label arziTitle;

	/**
	 * 
	 */
	private static final long serialVersionUID = 7404488962938096911L;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public MyFormLayout() {
		buildMainLayout();
		
		gender.addItem("Male");     
		gender.addItem("Female");
		
		arazCategory.addItem("Raza");
		arazCategory.addItem("Doa");
		
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// header
		header = buildHeader();
		mainLayout.addComponent(header);
		
		// body
		body = buildBody();
		mainLayout.addComponent(body);
		mainLayout.setExpandRatio(body, 1.0f);
		
		// footer
		footer = buildFooter();
		mainLayout.addComponent(footer);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHeader() {
		// common part: create layout
		header = new HorizontalLayout();
		header.setImmediate(false);
		header.setWidth("100.0%");
		header.setHeight("40px");
		header.setMargin(false);
		
		// arziTitle
		arziTitle = new Label();
		arziTitle.setStyleName("tabDescription");
		arziTitle.setImmediate(false);
		arziTitle.setWidth("-1px");
		arziTitle.setHeight("-1px");
		arziTitle.setValue("Please enter your arzi");
		header.addComponent(arziTitle);
		
		return header;
	}

	@AutoGenerated
	private GridLayout buildBody() {
		// common part: create layout
		body = new GridLayout();
		body.setStyleName("myForm");
		body.setImmediate(false);
		body.setWidth("100.0%");
		body.setHeight("95.45%");
		body.setMargin(false);
		body.setSpacing(true);
		body.setColumns(4);
		body.setRows(10);
		
		// firstNameLabel
		firstNameLabel = new Label();
		firstNameLabel.setImmediate(false);
		firstNameLabel.setWidth("-1px");
		firstNameLabel.setHeight("-1px");
		firstNameLabel.setValue("First Name:");
		body.addComponent(firstNameLabel, 0, 0);
		
		// firstNameText
		firstNameText = new TextField();
		firstNameText.setImmediate(false);
		firstNameText.setWidth("-1px");
		firstNameText.setHeight("-1px");
		firstNameText.setRequired(true);
		firstNameText.setMaxLength(50);
		body.addComponent(firstNameText, 1, 0);
		
		// lastNameLabel
		lastNameLabel = new Label();
		lastNameLabel.setImmediate(false);
		lastNameLabel.setWidth("-1px");
		lastNameLabel.setHeight("-1px");
		lastNameLabel.setValue("Last Name:");
		body.addComponent(lastNameLabel, 2, 0);
		
		// lastNameText
		lastNameText = new TextField();
		lastNameText.setImmediate(false);
		lastNameText.setWidth("-1px");
		lastNameText.setHeight("-1px");
		lastNameText.setMaxLength(50);
		body.addComponent(lastNameText, 3, 0);
		
		// genderLabel
		genderLabel = new Label();
		genderLabel.setImmediate(false);
		genderLabel.setWidth("-1px");
		genderLabel.setHeight("-1px");
		genderLabel.setValue("Gender:");
		body.addComponent(genderLabel, 0, 1);
		
		// gender
		gender = new OptionGroup();
		gender.setStyleName("horizontal");
		gender.setImmediate(false);
		gender.setWidth("-1px");
		gender.setHeight("-1px");
		body.addComponent(gender, 1, 1);
		
		// itsNumLabel
		itsNumLabel = new Label();
		itsNumLabel.setImmediate(false);
		itsNumLabel.setWidth("-1px");
		itsNumLabel.setHeight("-1px");
		itsNumLabel.setValue("ITS No:");
		body.addComponent(itsNumLabel, 2, 1);
		
		// itsNumText
		itsNumText = new TextField();
		itsNumText.setImmediate(false);
		itsNumText.setWidth("-1px");
		itsNumText.setHeight("-1px");
		itsNumText.setMaxLength(10);
		body.addComponent(itsNumText, 3, 1);
		
		// addressLabel
		addressLabel = new Label();
		addressLabel.setImmediate(false);
		addressLabel.setWidth("-1px");
		addressLabel.setHeight("-1px");
		addressLabel.setValue("Address:");
		body.addComponent(addressLabel, 0, 2);
		
		// addressText
		addressText = new TextField();
		addressText.setImmediate(false);
		addressText.setWidth("-1px");
		addressText.setHeight("-1px");
		addressText.setMaxLength(200);
		body.addComponent(addressText, 1, 2);
		
		// stateLabel
		stateLabel = new Label();
		stateLabel.setImmediate(false);
		stateLabel.setWidth("-1px");
		stateLabel.setHeight("-1px");
		stateLabel.setValue("State:");
		body.addComponent(stateLabel, 2, 2);
		
		// stateText
		stateText = new TextField();
		stateText.setImmediate(false);
		stateText.setWidth("-1px");
		stateText.setHeight("-1px");
		stateText.setMaxLength(100);
		body.addComponent(stateText, 3, 2);
		
		// cityLabel
		cityLabel = new Label();
		cityLabel.setImmediate(false);
		cityLabel.setWidth("-1px");
		cityLabel.setHeight("-1px");
		cityLabel.setValue("City:");
		body.addComponent(cityLabel, 0, 3);
		
		// cityText
		cityText = new TextField();
		cityText.setImmediate(false);
		cityText.setWidth("-1px");
		cityText.setHeight("-1px");
		cityText.setMaxLength(50);
		body.addComponent(cityText, 1, 3);
		
		// zipLabel
		zipLabel = new Label();
		zipLabel.setImmediate(false);
		zipLabel.setWidth("-1px");
		zipLabel.setHeight("-1px");
		zipLabel.setValue("Pin / Zip:");
		body.addComponent(zipLabel, 2, 3);
		
		// zipText
		zipText = new TextField();
		zipText.setImmediate(false);
		zipText.setWidth("-1px");
		zipText.setHeight("-1px");
		zipText.setMaxLength(7);
		body.addComponent(zipText, 3, 3);
		
		// phoneNumLabel
		phoneNumLabel = new Label();
		phoneNumLabel.setImmediate(false);
		phoneNumLabel.setWidth("-1px");
		phoneNumLabel.setHeight("-1px");
		phoneNumLabel.setValue("Phone Num:");
		body.addComponent(phoneNumLabel, 0, 4);
		
		// phoneNumText
		phoneNumText = new TextField();
		phoneNumText.setImmediate(false);
		phoneNumText.setWidth("-1px");
		phoneNumText.setHeight("-1px");
		phoneNumText.setMaxLength(10);
		body.addComponent(phoneNumText, 1, 4);
		
		// mobileNum
		mobileNum = new Label();
		mobileNum.setImmediate(false);
		mobileNum.setWidth("-1px");
		mobileNum.setHeight("-1px");
		mobileNum.setValue("Mobile Num:");
		body.addComponent(mobileNum, 2, 4);
		
		// cellNumText
		cellNumText = new TextField();
		cellNumText.setImmediate(false);
		cellNumText.setWidth("-1px");
		cellNumText.setHeight("-1px");
		cellNumText.setMaxLength(10);
		body.addComponent(cellNumText, 3, 4);
		
		// arazCatLabel
		arazCatLabel = new Label();
		arazCatLabel.setImmediate(false);
		arazCatLabel.setWidth("-1px");
		arazCatLabel.setHeight("-1px");
		arazCatLabel.setValue("Araz Category:");
		body.addComponent(arazCatLabel, 0, 5);
		
		// arazCategory
		arazCategory = new OptionGroup();
		arazCategory.setStyleName("horizontal");
		arazCategory.setImmediate(false);
		arazCategory.setWidth("-1px");
		arazCategory.setHeight("-1px");
		body.addComponent(arazCategory, 1, 5);
		
		// conditionLabel
		conditionLabel = new Label();
		conditionLabel.setImmediate(false);
		conditionLabel.setWidth("-1px");
		conditionLabel.setHeight("-1px");
		conditionLabel.setValue("Condition:");
		body.addComponent(conditionLabel, 2, 5);
		
		// conditionDrop
		conditionDrop = new ComboBox();
		conditionDrop.setImmediate(false);
		conditionDrop.setWidth("-1px");
		conditionDrop.setHeight("-1px");
		body.addComponent(conditionDrop, 3, 5);
		
		// affectedPartsLabel
		affectedPartsLabel = new Label();
		affectedPartsLabel.setImmediate(false);
		affectedPartsLabel.setWidth("-1px");
		affectedPartsLabel.setHeight("-1px");
		affectedPartsLabel.setValue("Affected Body Parts:");
		body.addComponent(affectedPartsLabel, 0, 6);
		
		// procedureLabel
		procedureLabel = new Label();
		procedureLabel.setImmediate(false);
		procedureLabel.setWidth("-1px");
		procedureLabel.setHeight("-1px");
		procedureLabel.setValue("Procedure:");
		body.addComponent(procedureLabel, 0, 7);
		
		// procedureDrop
		procedureDrop = new ComboBox();
		procedureDrop.setImmediate(false);
		procedureDrop.setWidth("-1px");
		procedureDrop.setHeight("-1px");
		body.addComponent(procedureDrop, 1, 7);
		
		// recommLabel
		recommLabel = new Label();
		recommLabel.setImmediate(false);
		recommLabel.setWidth("-1px");
		recommLabel.setHeight("-1px");
		recommLabel.setValue("Previous Doctors Recommendation:");
		body.addComponent(recommLabel, 0, 8);
		
		// previousRecomm
		previousRecomm = new TextArea();
		previousRecomm.setImmediate(false);
		previousRecomm.setWidth("-1px");
		previousRecomm.setHeight("-1px");
		previousRecomm.setMaxLength(2000);
		body.addComponent(previousRecomm, 1, 8);
		
		// commentsLabel
		commentsLabel = new Label();
		commentsLabel.setImmediate(false);
		commentsLabel.setWidth("-1px");
		commentsLabel.setHeight("-1px");
		commentsLabel.setValue("Additional Comments:");
		body.addComponent(commentsLabel, 0, 9);
		
		// addtnlComments
		addtnlComments = new TextArea();
		addtnlComments.setImmediate(false);
		addtnlComments.setWidth("-1px");
		addtnlComments.setHeight("-1px");
		addtnlComments.setMaxLength(2000);
		body.addComponent(addtnlComments, 1, 9);
		
		return body;
	}

	@AutoGenerated
	private HorizontalLayout buildFooter() {
		// common part: create layout
		footer = new HorizontalLayout();
		footer.setStyleName("myFormFooter");
		footer.setImmediate(false);
		footer.setWidth("100.0%");
		footer.setHeight("60px");
		footer.setMargin(false);
		
		// clear
		clear = new Button();
		clear.setStyleName("clear");
		clear.setCaption("Clear");
		clear.setImmediate(true);
		clear.setWidth("-1px");
		clear.setHeight("-1px");
		footer.addComponent(clear);
		footer.setComponentAlignment(clear, new Alignment(6));
		
		// save
		save = new Button();
		save.setStyleName("save");
		save.setCaption("Save");
		save.setImmediate(true);
		save.setWidth("-1px");
		save.setHeight("-1px");
		footer.addComponent(save);
		
		return footer;
	}

}
