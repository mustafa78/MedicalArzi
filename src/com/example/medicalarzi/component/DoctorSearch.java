package com.example.medicalarzi.component;

import java.util.ArrayList;

import com.example.medicalarzi.model.Arzi;
import com.example.medicalarzi.model.Status;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Table;
import com.vaadin.ui.Table.ColumnHeaderMode;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.VerticalSplitPanel;

public class DoctorSearch extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private VerticalSplitPanel splitPanel;

	@AutoGenerated
	private Table arziTable;

	@AutoGenerated
	private VerticalLayout topLayout;

	@AutoGenerated
	private Button search;

	@AutoGenerated
	private HorizontalLayout criteriaLayout;

	@AutoGenerated
	private ComboBox procedure;

	@AutoGenerated
	private ComboBox condition;

	@AutoGenerated
	private ComboBox country;

	@AutoGenerated
	private ComboBox region;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	/**
	 *
	 */
	private static final long serialVersionUID = -2608386102633068228L;

	BeanItemContainer<Arzi> myArziContainer = createMyArziDummyDatasource();

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public DoctorSearch() {
		buildMainLayout();
		initArziList();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	private void initRegions() {
		region.addItem("Asia");
		region.addItem("Africa");
		region.addItem("America");
		region.addItem("Europe");
		region.addItem("Australia");
	}

	private void initCountries() {
		country.addItem("India");
		country.addItem("Pakistan");
		country.addItem("Sri Lanka");
		country.addItem("Bangladesh");
		country.addItem("USA");
		country.addItem("Canada");
		country.addItem("United Kingdom");
		country.addItem("France");
		country.addItem("Germany");
		country.addItem("Tanzania");
		country.addItem("Australia");
		country.addItem("Uganda");
		country.addItem("Kenya");
		country.addItem("Ethopia");
		country.addItem("Norway");
	}

	private void initConditions() {

		condition.addItem("Cancer");
		condition.addItem("TB");
		condition.addItem("Migraine");
		condition.addItem("Cholera");
		condition.addItem("Typhoid");
		condition.addItem("Dengue");
		condition.addItem("Malaria");
	}

	private void initProcedures() {

		procedure.addItem("Chemotherapy");
		procedure.addItem("Dialysis");
		procedure.addItem("Blood Trnsfusion");
		procedure.addItem("Organ Transplant");
		procedure.addItem("Surgery");
		procedure.addItem("Radiation");

	}

	private void initArziList() {
		arziTable.setContainerDataSource(myArziContainer);
		arziTable.setSelectable(true);
		arziTable.setImmediate(true);
		arziTable.setColumnHeaderMode(ColumnHeaderMode.EXPLICIT);
		arziTable.setVisibleColumns(new Object[]{"arziId", "arziCategory", "region", "country", "status"});
		arziTable.setColumnHeaders(new String[]{"ID", "CATEGORY", "REGION", "COUNTRY", "STATUS"});
	}

	private static BeanItemContainer<Arzi> createMyArziDummyDatasource() {
		BeanItemContainer<Arzi> bc = new BeanItemContainer<Arzi>(Arzi.class);

		 /*ArrayList<Arzi> arziList = new ArrayList<Arzi>();
		 for (int i = 1; i < 50; i++) {
			 Arzi arzi = new Arzi();
			 Status status = new Status();
			 arzi.setArziId(new Long((long)(i* Math.random() + 1000)));
			 if(i%2 == 0)
				 arzi.setArziCategory("Doa");
			 else
				 arzi.setArziCategory("Raza");

			 if(i%3 == 0) {
				 status.setStatusDesc("Inprocess");
				 arzi.setStatus(status);
			 }
			 else if(i%7 == 0) {
				 status.setStatusDesc("Completed");
				 arzi.setStatus(status);
			 }
			 else if(i%5 == 0) {
				 status.setStatusDesc("Waiting");
				 arzi.setStatus(status);
			 }
			 else {
				 status.setStatusDesc("Submitted");
				 arzi.setStatus(status);
			 }

			 long randomNum = (long)(i* Math.random() + 1000);
			 if(randomNum % 2 == 0) {
				 arzi.setRegion("North America");
				 arzi.setCountry("USA");
			 }
			 else if(randomNum % 3 == 0) {
				 arzi.setRegion("North America");
				 arzi.setCountry("Canada");
			 }
			 if(randomNum % 5 == 0) {
				 arzi.setRegion("Asia");
				 arzi.setCountry("India");
			 }
			 if(randomNum % 7 == 0) {
				 arzi.setRegion("Asia");
				 arzi.setCountry("Pakistan");
			 }
			 if(randomNum % 9 == 0) {
				 arzi.setRegion("Europe");
				 arzi.setCountry("United Kingdom");
			 }
			 if(randomNum % 2 == 1) {
				 arzi.setRegion("Europe");
				 arzi.setCountry("France");
			 }
			 if(randomNum % 3 == 1) {
				 arzi.setRegion("Africa");
				 arzi.setCountry("Kenya");
			 }
			 if(randomNum % 5 == 1) {
				 arzi.setRegion("Africa");
				 arzi.setCountry("Tanzania");
			 }
			 arziList.add(arzi);
		 }

		 bc.addAll(arziList);*/

		return bc;
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// splitPanel
		splitPanel = buildSplitPanel();
		mainLayout.addComponent(splitPanel, "top:0.0px;left:0.0px;");

		return mainLayout;
	}

	@AutoGenerated
	private VerticalSplitPanel buildSplitPanel() {
		// common part: create layout
		splitPanel = new VerticalSplitPanel();
		splitPanel.setImmediate(false);
		splitPanel.setWidth("100.0%");
		splitPanel.setHeight("100.0%");

		// topLayout
		topLayout = buildTopLayout();
		topLayout.setSizeFull();
		splitPanel.addComponent(topLayout);

		// arziTable
		arziTable = new Table();
		arziTable.setImmediate(false);
		arziTable.setSizeFull();
		splitPanel.addComponent(arziTable);

		return splitPanel;
	}

	@AutoGenerated
	private VerticalLayout buildTopLayout() {
		// common part: create layout
		topLayout = new VerticalLayout();
		topLayout.setImmediate(false);
		topLayout.setMargin(false);

		// criteriaLayout
		criteriaLayout = buildCriteriaLayout();
		criteriaLayout.setSizeFull();
		topLayout.addComponent(criteriaLayout);

		// search
		search = new Button();
		search.setCaption("Search");
		search.setImmediate(true);
		search.setWidth("-1px");
		search.setHeight("-1px");
		topLayout.addComponent(search);
		topLayout.setComponentAlignment(search, new Alignment(48));

		return topLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildCriteriaLayout() {
		// common part: create layout
		criteriaLayout = new HorizontalLayout();
		criteriaLayout.setImmediate(false);
		criteriaLayout.setWidth("-1px");
		criteriaLayout.setHeight("-1px");
		criteriaLayout.setMargin(true);
		criteriaLayout.setSpacing(true);

		// region
		region = new ComboBox();
		region.setCaption("Region:");
		region.setImmediate(false);
		region.setWidth("-1px");
		region.setHeight("-1px");
		initRegions();
		criteriaLayout.addComponent(region);

		// country
		country = new ComboBox();
		country.setCaption("Country:");
		country.setImmediate(false);
		country.setWidth("-1px");
		country.setHeight("-1px");
		initCountries();
		criteriaLayout.addComponent(country);

		// condition
		condition = new ComboBox();
		condition.setCaption("Condition");
		condition.setImmediate(false);
		condition.setWidth("-1px");
		condition.setHeight("-1px");
		initConditions();
		criteriaLayout.addComponent(condition);

		// procedure
		procedure = new ComboBox();
		procedure.setCaption("Procedure");
		procedure.setImmediate(false);
		procedure.setWidth("-1px");
		procedure.setHeight("-1px");
		initProcedures();
		criteriaLayout.addComponent(procedure);

		return criteriaLayout;
	}

}
