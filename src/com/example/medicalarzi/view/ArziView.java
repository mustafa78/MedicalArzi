package com.example.medicalarzi.view;

import java.util.ArrayList;




import com.example.medicalarzi.component.DoctorSearch;
import com.example.medicalarzi.component.MyFormLayout;
import com.example.medicalarzi.component.UserList;
import com.example.medicalarzi.model.Arzi;
import com.example.medicalarzi.model.Patient;
import com.example.medicalarzi.model.Status;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.Theme;
import com.vaadin.data.fieldgroup.BeanFieldGroup;
import com.vaadin.data.fieldgroup.PropertyId;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.spring.annotation.VaadinUIScope;
import com.vaadin.spring.navigator.annotation.SpringView;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.Panel;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TabSheet.SelectedTabChangeEvent;
import com.vaadin.ui.Table;
import com.vaadin.ui.Table.ColumnHeaderMode;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;

@Theme("medicalarzi")
@VaadinUIScope
@SpringView(name = ArziView.NAME)
public class ArziView extends CustomComponent implements View {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private Label pageHeading;

	@AutoGenerated
	private Label loggedInUser;

	@AutoGenerated
	private Button logout;

	@AutoGenerated
	private TabSheet arziTab;

	@AutoGenerated
	private MyFormLayout myFormLayout;

	@AutoGenerated
	private Table pendingTasks;

	@AutoGenerated
	private DoctorSearch search;

	@AutoGenerated
	private UserList userList;

	@AutoGenerated
	private Table myArzis;

	@AutoGenerated
	private FormLayout newArziForm;

	@AutoGenerated
	private Panel buttonsPanel;

	@AutoGenerated
	private HorizontalLayout btnPanelLayout;

	@AutoGenerated
	private Button saveButton;

	@AutoGenerated
	private Button clearButton;

	@AutoGenerated
	@PropertyId("additionalComments")
	private TextArea addtnlComments;

	@AutoGenerated
	@PropertyId("doctorsRecommendations")
	private TextArea prevRecomm;

	@AutoGenerated
	@PropertyId("procedure")
	private ComboBox procedure;

	@AutoGenerated
	private ComboBox bodyParts;

	@AutoGenerated
	@PropertyId("condition")
	private ComboBox condition;

	@AutoGenerated
	private ComboBox arazCategory;

	@AutoGenerated
	@PropertyId("state")
	private TextField state;

	@AutoGenerated
	@PropertyId("zip")
	private TextField zip;

	@AutoGenerated
	@PropertyId("city")
	private TextField city;

	@AutoGenerated
	@PropertyId("cellNum")
	private TextField mobileNum;

	@AutoGenerated
	@PropertyId("phoneNum")
	private TextField phoneNum;

	@AutoGenerated
	@PropertyId("homeAddress1")
	private TextField address;

	@AutoGenerated
	@PropertyId("genderInd")
	private OptionGroup gender;

	@AutoGenerated
	@PropertyId("itsNumber")
	private TextField itsNumber;

	@AutoGenerated
	@PropertyId("lastName")
	private TextField lastNameText;

	@AutoGenerated
	@PropertyId("firstName")
	private TextField firstNameText;

	//BeanItemContainer<Arzi> myArziContainer = null; //createMyArziDummyDatasource();
	BeanFieldGroup<Patient> arziFormFields = new BeanFieldGroup<Patient>(Patient.class);


	/**
	 *
	 */
	private static final long serialVersionUID = 3108515092156042608L;
	public static final String NAME = "arziEditor";
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ArziView() {
		buildMainLayout();

		gender.addItem("Male");
		gender.addItem("Female");

		Patient patient = new Patient();
		// Add bean item that is bound.
		//arziFormFields.setItemDataSource(patient);
		//Bind all the member fields to the form fields
		//arziFormFields.bindMemberFields(this);

		//Handle logout action
		handleLogout(logout);

		handleTabChange(arziTab);

		//initMyArziList();

		setCompositionRoot(mainLayout);
		// TODO add user code here
	}

	@Override
	public void enter(ViewChangeEvent event) {
		// Get the user name from the session
        String username = String.valueOf(getSession().getAttribute("user"));

        // And show the username
        loggedInUser.setValue("Welcome, " + username);// Get the user name from the session
	}

	private void handleLogout(Button logout) {
		logout.addClickListener(new Button.ClickListener() {

			private static final long serialVersionUID = 5930575610952215594L;

			@Override
			public void buttonClick(ClickEvent event) {
				 // "Logout" the user
	            getSession().setAttribute("user", null);

	            // Refresh this view, should redirect to login view
	            getUI().getNavigator().navigateTo(SimpleLoginView.NAME);
			}
		});
	}

	private void handleTabChange(final TabSheet tabsheet) {
		// Handling tab changes
        tabsheet.addSelectedTabChangeListener(new TabSheet.SelectedTabChangeListener() {
			private static final long serialVersionUID = -531964697858191844L;

			@Override
			public void selectedTabChange(SelectedTabChangeEvent event) {
				TabSheet tabsheet = event.getTabSheet();

		        Component tab = (Component) tabsheet.getSelectedTab();

		     // Get the tab caption from the tab object
		        String caption = tabsheet.getTab(tab).getCaption();

		        /*if(caption.equals("User List")) {

		        }*/

			}
		});
	}

	/*private void initMyArziList() {
		myArzis.setContainerDataSource(myArziContainer);
		myArzis.setSelectable(true);
		myArzis.setImmediate(true);
		myArzis.setColumnHeaderMode(ColumnHeaderMode.EXPLICIT);
		myArzis.setVisibleColumns(new Object[]{"arziId", "status"});
		myArzis.setColumnHeaders(new String[]{"ID", "STATUS"});
	}*/

	/*private static BeanItemContainer<Arzi> createMyArziDummyDatasource() {
		BeanItemContainer<Arzi> bc = new BeanItemContainer<Arzi>(Arzi.class);

		 ArrayList<Arzi> myArziList = new ArrayList<Arzi>();
		 for (int i = 1; i < 10; i++) {
			 Arzi myArzi = new Arzi();
			 Status status = new Status();
			 myArzi.setArziId(new Long((long)(i* Math.random() + 1000)));
			 if(i%2 == 0)
				 myArzi.setArziCategory("Doa");
			 else
				 myArzi.setArziCategory("Raza");

			 if(i%3 == 0) {
				 status.setStatusDesc("Inprocess");
				 myArzi.setStatus(status);
			 }
			 else if(i%3 == 2) {
				 status.setStatusDesc("Completed");
				 myArzi.setStatus(status);
			 }
			 else {
				 status.setStatusDesc("Submitted");
				 myArzi.setStatus(status);
			 }

			 myArziList.add(myArzi);
		 }

		 bc.addAll(myArziList);

		return bc;
	}*/

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setStyleName("blue");
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// arziTab
		arziTab = buildArziTab();
		mainLayout.addComponent(arziTab,
				"top:70.0px;right:15.0px;bottom:62.0px;left:15.0px;");

		// logout
		logout = new Button();
		logout.setCaption("Logout");
		logout.setImmediate(true);
		logout.setWidth("-1px");
		logout.setHeight("-1px");
		mainLayout.addComponent(logout, "top:20.0px;right:15.0px;");

		// loggedInUser
		loggedInUser = new Label();
		loggedInUser.setImmediate(false);
		loggedInUser.setWidth("-1px");
		loggedInUser.setHeight("-1px");
		loggedInUser.setValue("Label");
		mainLayout.addComponent(loggedInUser, "top:20.0px;right:100.0px;");

		// pageHeading
		pageHeading = new Label();
		pageHeading.setStyleName("heading");
		pageHeading.setImmediate(false);
		pageHeading.setWidth("-1px");
		pageHeading.setHeight("-1px");
		pageHeading.setValue("Medical Arzi");
		mainLayout.addComponent(pageHeading, "top:30.0px;left:20.0px;");

		return mainLayout;
	}

	@AutoGenerated
	private TabSheet buildArziTab() {
		// common part: create layout
		arziTab = new TabSheet();
		arziTab.setStyleName("borderless");
		arziTab.setImmediate(true);
		arziTab.setWidth("100.0%");
		arziTab.setHeight("100.0%");

		// newArziForm
		newArziForm = buildNewArziForm();
		arziTab.addTab(newArziForm, "New Arzi", null);

		// myArzis
		myArzis = new Table();
		myArzis.setCaption("My Arzi");
		myArzis.setImmediate(false);
		myArzis.setWidth("100.0%");
		myArzis.setHeight("-1px");
		arziTab.addTab(myArzis, "My Arzis", null);

		// userList
		userList = new UserList();
		userList.setImmediate(false);
		userList.setWidth("100.0%");
		userList.setHeight("100.0%");
		arziTab.addTab(userList, "Doctors View", null);

		// search
		search = new DoctorSearch();
		search.setImmediate(false);
		search.setWidth("100.0%");
		search.setHeight("100.0%");
		arziTab.addTab(search, "Search", null);

		// pendingTasks
		pendingTasks = new Table();
		pendingTasks.setImmediate(false);
		pendingTasks.setWidth("100.0%");
		pendingTasks.setHeight("100.0%");
		arziTab.addTab(pendingTasks, "Pending Tasks", null);

		// myFormLayout
		myFormLayout = new MyFormLayout();
		myFormLayout.setImmediate(false);
		myFormLayout.setWidth("100.0%");
		myFormLayout.setHeight("100.0%");
		arziTab.addTab(myFormLayout, "Form", null);

		return arziTab;
	}

	@AutoGenerated
	private FormLayout buildNewArziForm() {
		// common part: create layout
		newArziForm = new FormLayout();
		newArziForm.setImmediate(false);
		newArziForm.setWidth("100.0%");
		newArziForm.setHeight("93.09%");
		newArziForm.setMargin(false);
		newArziForm.setSpacing(true);

		// firstNameText
		firstNameText = new TextField();
		firstNameText.setCaption("First Name:");
		firstNameText.setImmediate(false);
		firstNameText.setWidth("-1px");
		firstNameText.setHeight("-1px");
		firstNameText.setRequired(true);
		firstNameText.setMaxLength(50);
		newArziForm.addComponent(firstNameText);

		// lastNameText
		lastNameText = new TextField();
		lastNameText.setCaption("Last Name:");
		lastNameText.setImmediate(false);
		lastNameText.setWidth("-1px");
		lastNameText.setHeight("-1px");
		lastNameText.setRequired(true);
		lastNameText.setMaxLength(50);
		newArziForm.addComponent(lastNameText);

		// itsNumber
		itsNumber = new TextField();
		itsNumber.setCaption("ITS Number:");
		itsNumber.setImmediate(false);
		itsNumber.setWidth("-1px");
		itsNumber.setHeight("-1px");
		itsNumber.setInvalidAllowed(false);
		itsNumber.setRequired(true);
		itsNumber.setMaxLength(10);
		newArziForm.addComponent(itsNumber);

		// gender
		gender = new OptionGroup();
		gender.setCaption("Gender:");
		gender.setImmediate(false);
		gender.setWidth("-1px");
		gender.setHeight("-1px");
		gender.setInvalidAllowed(false);
		gender.setRequired(true);
		newArziForm.addComponent(gender);

		// address
		address = new TextField();
		address.setCaption("Home Address:");
		address.setImmediate(false);
		address.setWidth("-1px");
		address.setHeight("-1px");
		address.setInvalidAllowed(false);
		address.setRequired(true);
		newArziForm.addComponent(address);

		// phoneNum
		phoneNum = new TextField();
		phoneNum.setCaption("Phone No:");
		phoneNum.setImmediate(false);
		phoneNum.setWidth("-1px");
		phoneNum.setHeight("-1px");
		phoneNum.setInvalidAllowed(false);
		phoneNum.setRequired(true);
		phoneNum.setMaxLength(15);
		newArziForm.addComponent(phoneNum);

		// mobileNum
		mobileNum = new TextField();
		mobileNum.setCaption("Mobile No:");
		mobileNum.setImmediate(false);
		mobileNum.setWidth("-1px");
		mobileNum.setHeight("-1px");
		mobileNum.setInvalidAllowed(false);
		mobileNum.setMaxLength(15);
		newArziForm.addComponent(mobileNum);

		// city
		city = new TextField();
		city.setCaption("City");
		city.setImmediate(false);
		city.setWidth("-1px");
		city.setHeight("-1px");
		city.setInvalidAllowed(false);
		city.setRequired(true);
		city.setMaxLength(50);
		newArziForm.addComponent(city);

		// zip
		zip = new TextField();
		zip.setCaption("Zip");
		zip.setImmediate(false);
		zip.setWidth("-1px");
		zip.setHeight("-1px");
		zip.setInvalidAllowed(false);
		zip.setRequired(true);
		zip.setMaxLength(10);
		newArziForm.addComponent(zip);

		// state
		state = new TextField();
		state.setCaption("State");
		state.setImmediate(false);
		state.setWidth("-1px");
		state.setHeight("-1px");
		state.setInvalidAllowed(false);
		state.setRequired(true);
		state.setMaxLength(50);
		newArziForm.addComponent(state);

		// arazCategory
		arazCategory = new ComboBox();
		arazCategory.setCaption("Araz Category");
		arazCategory.setImmediate(false);
		arazCategory.setWidth("-1px");
		arazCategory.setHeight("-1px");
		arazCategory.setInvalidAllowed(false);
		arazCategory.setRequired(true);
		newArziForm.addComponent(arazCategory);

		// condition
		condition = new ComboBox();
		condition.setCaption("Condition");
		condition.setImmediate(false);
		condition.setWidth("-1px");
		condition.setHeight("-1px");
		condition.setInvalidAllowed(false);
		condition.setRequired(true);
		newArziForm.addComponent(condition);

		// bodyParts
		bodyParts = new ComboBox();
		bodyParts.setCaption("Affected Body Parts:");
		bodyParts.setImmediate(false);
		bodyParts.setWidth("-1px");
		bodyParts.setHeight("-1px");
		bodyParts.setInvalidAllowed(false);
		bodyParts.setRequired(true);
		newArziForm.addComponent(bodyParts);

		// procedure
		procedure = new ComboBox();
		procedure.setCaption("Procedure");
		procedure.setImmediate(false);
		procedure.setWidth("-1px");
		procedure.setHeight("-1px");
		procedure.setInvalidAllowed(false);
		procedure.setRequired(true);
		newArziForm.addComponent(procedure);

		// prevRecomm
		prevRecomm = new TextArea();
		prevRecomm.setCaption("Doctor's Previuos Recommendations:");
		prevRecomm.setImmediate(false);
		prevRecomm.setWidth("332px");
		prevRecomm.setHeight("104px");
		prevRecomm.setMaxLength(4000);
		newArziForm.addComponent(prevRecomm);

		// addtnlComments
		addtnlComments = new TextArea();
		addtnlComments.setCaption("Additional Comments:");
		addtnlComments.setImmediate(false);
		addtnlComments.setWidth("332px");
		addtnlComments.setHeight("102px");
		addtnlComments.setMaxLength(4000);
		newArziForm.addComponent(addtnlComments);

		// buttonsPanel
		buttonsPanel = buildButtonsPanel();
		newArziForm.addComponent(buttonsPanel);
		newArziForm.setComponentAlignment(buttonsPanel, new Alignment(20));

		return newArziForm;
	}

	@AutoGenerated
	private Panel buildButtonsPanel() {
		// common part: create layout
		buttonsPanel = new Panel();
		buttonsPanel.setImmediate(false);
		buttonsPanel.setWidth("300px");
		buttonsPanel.setHeight("30px");

		// btnPanelLayout
		btnPanelLayout = buildBtnPanelLayout();
		buttonsPanel.setContent(btnPanelLayout);

		return buttonsPanel;
	}

	@AutoGenerated
	private HorizontalLayout buildBtnPanelLayout() {
		// common part: create layout
		btnPanelLayout = new HorizontalLayout();
		btnPanelLayout.setStyleName("btnLayout");
		btnPanelLayout.setImmediate(false);
		btnPanelLayout.setWidth("100.0%");
		btnPanelLayout.setHeight("100.0%");
		btnPanelLayout.setMargin(false);

		// clearButton
		clearButton = new Button();
		clearButton.setCaption("Clear");
		clearButton.setImmediate(true);
		clearButton.setWidth("-1px");
		clearButton.setHeight("-1px");
		btnPanelLayout.addComponent(clearButton);

		// saveButton
		saveButton = new Button();
		saveButton.setCaption("Save");
		saveButton.setImmediate(true);
		saveButton.setWidth("-1px");
		saveButton.setHeight("-1px");
		btnPanelLayout.addComponent(saveButton);

		return btnPanelLayout;
	}

}
