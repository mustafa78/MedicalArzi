/**
 *
 */
package com.example.medicalarzi.view;

import org.apache.commons.lang3.StringUtils;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.core.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;

import com.example.medicalarzi.component.ArziFooterComponent;
import com.example.medicalarzi.component.ArziHeaderComponent;
import com.example.medicalarzi.model.Patient;
import com.example.medicalarzi.service.PatientService;
import com.example.medicalarzi.util.MedicalArziConstants;
import com.example.medicalarzi.util.MedicalArziUtils;
import com.vaadin.annotations.Theme;
import com.vaadin.data.validator.RegexpValidator;
import com.vaadin.event.ShortcutAction.KeyCode;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.server.ThemeResource;
import com.vaadin.server.VaadinService;
import com.vaadin.shared.Position;
import com.vaadin.shared.ui.MarginInfo;
import com.vaadin.spring.annotation.SpringView;
import com.vaadin.spring.annotation.UIScope;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.themes.Reindeer;

/**
 * @author Mustafa Kanchwala
 *
 */
@Theme("medicalarzi")
@UIScope
@SpringView(name = SimpleLoginView.NAME)
public class SimpleLoginView extends CustomComponent implements View,
		ClickListener {

	/**
	 *
	 */
	private static final long serialVersionUID = 6865340744675566579L;

	public static Logger logger = (Logger) LogManager
			.getLogger(SimpleLoginView.class);

	public static final String NAME = "login";

	/**
	 * MainLayout
	 */
	private VerticalLayout mainLayout;

	/**
	 * Header, MainView and Footer
	 */
	private ArziHeaderComponent header;

	private HorizontalLayout viewLayout;

	private ArziFooterComponent footer;

	/**
	 * Content with the form and fields
	 */
	private VerticalLayout contentLayout;

	private TextField itsNumber;

	private PasswordField password;

	private Button loginButton;

	private Button registrationLink;

	private Button forgotPasswordLink;

	private HorizontalLayout buttonsLayout;

	private Label separator;

	// It sets the validation error message in case of a validation error.
	private Label validationMessage;

	@Autowired
	@Qualifier("service.PatientService")
	private PatientService patientService;

	/**
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public SimpleLoginView() {
		logger.debug("Initializing Simple Login View.");
	}

	@Override
	public void enter(ViewChangeEvent event) {
		init();

		// Get the logout button from the Header component and hide it
		Component logoutBtn = MedicalArziUtils.findById(header,
				MedicalArziConstants.HEADER_LOGOUT_BUTTON_ID);
		if (logoutBtn != null) {
			logoutBtn.setVisible(false);
		}

		if (event.getOldView() instanceof PatientRegistrationView) {
			if ((Boolean) getSession().getAttribute(
					MedicalArziConstants.SESS_ATTR_IS_REGISTRATION_SUCCESSFUL)) {
				//Create a user friendly notification
				MedicalArziUtils.createAndShowNotification(null,
						"User registration is successfull",
						Type.HUMANIZED_MESSAGE, Position.TOP_LEFT,
						"userFriendlyMsg",
						MedicalArziConstants.USER_FRIENDLY_MSG_DELAY_MSEC);

			}
		}
		else if(event.getOldView() instanceof ForgotPasswordView) {
			if (VaadinService.getCurrentRequest().getAttribute(
					MedicalArziConstants.REQ_ATTR_PASSWD_EMAILED) != null) {
				//Create a user friendly notification
				MedicalArziUtils
						.createAndShowNotification(
								null,
								"The password has been sent to the registered email address. Please check your email to login.",
								Type.HUMANIZED_MESSAGE,
								Position.TOP_LEFT,
								"userFriendlyMsg",
								MedicalArziConstants.USER_FRIENDLY_MSG_DELAY_MSEC);
			}
		}
	}

	/**
	 * This method should first build the main layout, set the composition root
	 * and then do any custom initialization.
	 * 
	 */
	public void init() {
		buildMainLayout();
		mainLayout.setStyleName(Reindeer.LAYOUT_BLUE);
		setCompositionRoot(mainLayout);
	}

	private void buildMainLayout() {
		// top-level component properties
		setSizeFull();

		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();

		// header
		header = new ArziHeaderComponent();
		header.setImmediate(false);
		header.setHeight("108px");
		mainLayout.addComponent(header);
		// mainLayout.setExpandRatio(header, 0.5f);

		// viewLayout
		buildViewLayout();
		mainLayout.addComponent(viewLayout);
		mainLayout.setExpandRatio(viewLayout, 4.0f);
		mainLayout.setComponentAlignment(viewLayout, Alignment.MIDDLE_CENTER);

		// footer
		footer = new ArziFooterComponent();
		footer.setImmediate(false);
		footer.setWidthUndefined();
		footer.setHeight("50px");
		mainLayout.addComponent(footer);
		mainLayout.setComponentAlignment(footer, Alignment.MIDDLE_CENTER);
	}

	/**
	 *
	 */
	private void buildViewLayout() {

		viewLayout = new HorizontalLayout();
		viewLayout.setSizeFull();

		Embedded moulaPic = new Embedded(null, new ThemeResource(
				"img/moula.jpg"));
		viewLayout.addComponent(moulaPic);
		viewLayout.setComponentAlignment(moulaPic, Alignment.MIDDLE_RIGHT);

		contentLayout = buildLoginFormLayout();

		viewLayout.setStyleName(Reindeer.LAYOUT_BLUE);
		viewLayout.addComponent(contentLayout);
		viewLayout.setSpacing(true);
	}

	/**
	 *
	 */
	private VerticalLayout buildLoginFormLayout() {
		// Create the user input field
		itsNumber = new TextField("ITS Number:");
		itsNumber.setWidth("300px");
		itsNumber.setRequired(true);
		itsNumber.setMaxLength(8);
		itsNumber.setInputPrompt("Please enter your ITS number");
		itsNumber.addValidator(new RegexpValidator("\\d*",
				"You must enter a number"));
		itsNumber.setInvalidAllowed(false);

		// Create the password input field
		password = new PasswordField("Password:");
		password.setWidth("300px");
		password.setRequired(true);
		password.setNullRepresentation("");

		// Create login button
		loginButton = new Button(new ThemeResource("img/login-button.png"));
		loginButton.setStyleName(Reindeer.BUTTON_LINK + " ptntLoginBtn");
		loginButton.addClickListener(this);
		//Set the login button as the default button. Causes a click event for the button to be fired.
		loginButton.setClickShortcut(KeyCode.ENTER);

		buttonsLayout = buildButtonsLayout();

		validationMessage = new Label("");
		validationMessage.setStyleName("errorLabel");

		// Add both to a panel
		VerticalLayout fields = new VerticalLayout(validationMessage,
				itsNumber, password, loginButton, buttonsLayout);
		fields.setCaption("Please enter your login credentials.");
		fields.setSpacing(true);
		fields.setMargin(new MarginInfo(true, true, true, false));
		fields.setStyleName("ptntLoginFieldsCaption");
		fields.setSizeUndefined();

		// The view root layout
		VerticalLayout contentLayout = new VerticalLayout(fields);
		contentLayout.setSizeFull();
		contentLayout.setComponentAlignment(fields, Alignment.MIDDLE_LEFT);

		return contentLayout;
	}

	private HorizontalLayout buildButtonsLayout() {

		buttonsLayout = new HorizontalLayout();

		// Create a registration & forgot password link
		registrationLink = new Button("Register Now", this);
		registrationLink.setStyleName(Reindeer.BUTTON_LINK);
		buttonsLayout.addComponent(registrationLink);
		buttonsLayout.setComponentAlignment(registrationLink,
				Alignment.MIDDLE_RIGHT);

		separator = new Label("|");
		buttonsLayout.addComponent(separator);
		buttonsLayout.setComponentAlignment(registrationLink,
				Alignment.MIDDLE_CENTER);

		forgotPasswordLink = new Button("Forgot Password?", this);
		forgotPasswordLink.setStyleName(Reindeer.BUTTON_LINK);
		buttonsLayout.addComponent(forgotPasswordLink);
		buttonsLayout.setComponentAlignment(forgotPasswordLink,
				Alignment.MIDDLE_LEFT);

		buttonsLayout.setSpacing(true);
		buttonsLayout.setStyleName("ptntLoginLinks");

		return buttonsLayout;

	}

	@Override
	public void buttonClick(ClickEvent event) {

		if (event.getButton().equals(forgotPasswordLink)) {
			logger.debug("Forgot Password clicked......");

			getUI().getNavigator().navigateTo(ForgotPasswordView.NAME);

		} else if (event.getButton().equals(registrationLink)) {
			logger.debug("Register Now clicked......");

			getUI().getNavigator().navigateTo(PatientRegistrationView.NAME);
		}

		else {
			// Validate the fields using the navigator. By using validators for
			// the fields we reduce the amount of queries we have to use to the
			// database for wrongly entered passwords
			if (!itsNumber.isValid() || !password.isValid()) {
				return;
			}

			String itsNumber = this.itsNumber.getValue();
			String password = this.password.getValue();

			// Validate itsNumber and password with database here.
			String result = patientService.authenticate(
					Long.valueOf(itsNumber), password,
					MedicalArziConstants.MAP_ENCODE_PASSWORD_KEY);

			boolean isValid = StringUtils.isNotBlank(result)
					&& result.equals("true") ? true : false;

			if (isValid) {

				Patient ptnt = patientService.getPatientInfo(Long
						.valueOf(itsNumber));

				if (ptnt != null) {
					MedicalArziUtils.setSessionAttribute(
							MedicalArziConstants.SESS_ATTR_PTNT_ITS_NUM,
							itsNumber);
					
					MedicalArziUtils.setSessionAttribute(
							MedicalArziConstants.SESS_ATTR_PTNT_INFO, ptnt);
				}
				// Navigate to main view
				getUI().getNavigator().navigateTo(MedicalArziLandingView.NAME);

			} else {
				// Set the errorMessage
				validationMessage.setValue("Login Failed. Please try again");

				// Wrong password clear the password field and refocuses it
				this.password.setValue(null);
				this.password.focus();

			}
		}

	}

}
